// Принцип MVP не реализован. Принцип SOLID частично. Выделили тольуо вывод данных.

//1. Этот класс используется для ввода данных которые передает в класс вывода экземпляр которогт он же исоздает.
// В других классах такого функционала нет. 
//Следовательно можно сказать что тут работает 1 й принцип - принцип единственной отвертственности.
// 2. Если нам понадобится расширить функционал, то мы добавим создадим новый метод/объект.
// Не внося изменений в существющий функционал. Как я и сделал с запросом мат операнда.
///Это второй принцияп - открытости/закрытости.
// 3. Интерфейсов нет, но класс несет свой специфилизированный фунционал (формирование данных - создание объекта).
//Так что можно увидеть 4й принцип - принцип разделения ответственности..


package Sem4;
public class Task2 {
    public static void main(String[] args) {
          
        Output print = new Output(); // создали объект класса output в который передали даннные

        // создали массивы разных типов перешли в Output и вывели переменные в консоль
        String[] body = {"голова", "рука", "нога", "спина", "живот", "шея"};
        Integer[] num1 = {123, 41,- 5, 2, 13, -456, 54};
        Double[] num2 = {-1.5, 2.0, 4.7, -9.9, 122.44, 0.1};
        print.<String>printArray(body);
        print.<Integer>printArray(num1);
        print.<Double>printArray(num2);
    }
}
